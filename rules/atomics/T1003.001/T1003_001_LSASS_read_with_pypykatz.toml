[rule]
author = [ "AtomicRedTeam-Automation",]
description = "Detection for specific test 'LSASS read with pypykatz' (GUID: c37bc535-5c62-4195-9cc3-0517673171d8) of technique T1003.001 (OS Credential Dumping: LSASS Memory). Test Description: Parses secrets hidden in the LSASS process with python. Similar to mimikatz's sekurlsa::\n\nPython 3 must be installed, use the get_prereq_command's to meet the prerequisites for this test.\n\nSuccessful execution of this test will display multiple usernames and passwords/hashes to the screen.\n\nWill create a Python virtual environment within the External Payloads folder that can be deleted manually post test execution.. Command/Steps: \\\"#{venv_path}\\\\Scripts\\\\pypykatz\\\" live lsa \n"
from = "now-9m"
rule_id = "a60f44cf-3b62-4c5c-978f-9e40f0c923e2"
language = "kql"
name = "Atomic Test: T1003.001 - LSASS read with pypykatz"
output_index = ".siem-signals-default"
references = [ "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/refs/heads/master/atomics/T1003.001/T1003.001.yaml",]
risk_score = 50
severity = "medium"
tags = [ "AtomicRedTeam", "T1003.001", "c37bc535-5c62-4195-9cc3-0517673171d8", "windows",]
type = "query"
query = "(process.name : (\\\"cmd.exe\\\", \\\"cmmon32.exe\\\") OR process.parent.name : (\\\"cmd.exe\\\", \\\"cmmon32.exe\\\")) AND process.command_line : \\\"*live*\\\""
version = 1
index = [ "logs-endpoint.events.*", "winlogbeat-*", "logs-windows.*", "logs-linux.*", "logs-macos.*",]
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003.001"
name = "LSASS read with pypykatz"
reference = "https://attack.mitre.org/techniques/T1003/001"

[[rule.threat.tactic]]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/techniques/T1003/001"

[[rule.threat.tactic]]
id = "TA0004"
name = "Privilege Escalation"
reference = "https://attack.mitre.org/techniques/T1003/001"

[[rule.threat.tactic]]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/techniques/T1003/001"


